/home/jhar131/TESTING/einsteintoolkit/2012-05-17-020002/Cactus/TEST/sim/Vectors
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 

--------------------------------------------------------------------------------

Cactus version:    4.0.1
Compile date:      May 17 2012 (02:47:48)
Run date:          May 17 2012 (03:12:09-0500)
Run host:          numrel07.cct.lsu.edu (pid=2814)
Working directory: /home/jhar131/TESTING/einsteintoolkit/2012-05-17-020002/Cactus/TEST/sim/Vectors
Executable:        /home/jhar131/TESTING/einsteintoolkit/2012-05-17-020002/Cactus/exe/cactus_sim
Parameter file:    /home/jhar131/TESTING/einsteintoolkit/2012-05-17-020002/Cactus/arrangements/LSUThorns/Vectors/test/vectors.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Vectors<---
Activating thorn Vectors...Success -> active implementation Vectors
Activation requested for 
--->CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      PUGH::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      IOASCII::IOASCII_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      Vectors::Vectors_Startup: Print startup message

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
  if (checkpoint)
    [CCTK_CHECKPOINT]
  endif
  if (analysis)
    [CCTK_ANALYSIS]
  endif
  Output grid variables
  enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): Test vec_set1...
INFO (Vectors): Test vec_set...
INFO (Vectors): Test vec_elt0...
INFO (Vectors): Test vec_elt[0]...
INFO (Vectors): Test vec_elt[1]...
INFO (Vectors): Test vec_load...
INFO (Vectors): Test vec_loadu[0]...
INFO (Vectors): Test vec_loadu[1]...
INFO (Vectors): Test vec_loadu_maybe[0]...
INFO (Vectors): Test vec_loadu_maybe[1]...
INFO (Vectors): Test vec_loadu_maybe3[0,0,0]...
INFO (Vectors): Test vec_loadu_maybe3[0,0,1]...
INFO (Vectors): Test vec_loadu_maybe3[0,1,0]...
INFO (Vectors): Test vec_loadu_maybe3[0,1,1]...
INFO (Vectors): Test vec_loadu_maybe3[1,0,0]...
INFO (Vectors): Test vec_loadu_maybe3[1,0,1]...
INFO (Vectors): Test vec_loadu_maybe3[1,1,0]...
INFO (Vectors): Test vec_loadu_maybe3[1,1,1]...
INFO (Vectors): Test vec_store...
INFO (Vectors): Test vec_store_nta...
INFO (Vectors): Test vec_store_nta_partial[0,0;0]...
INFO (Vectors): Test vec_store_nta_partial[0,0;1]...
INFO (Vectors): Test vec_store_nta_partial[0,0;2]...
INFO (Vectors): Test vec_store_nta_partial[0,0;3]...
INFO (Vectors): Test vec_store_nta_partial[0,0;4]...
INFO (Vectors): Test vec_store_nta_partial[0,0;5]...
INFO (Vectors): Test vec_store_nta_partial[0,1;0]...
INFO (Vectors): Test vec_store_nta_partial[0,1;1]...
INFO (Vectors): Test vec_store_nta_partial[0,1;2]...
INFO (Vectors): Test vec_store_nta_partial[0,1;3]...
INFO (Vectors): Test vec_store_nta_partial[0,1;4]...
INFO (Vectors): Test vec_store_nta_partial[0,1;5]...
INFO (Vectors): Test vec_store_nta_partial[0,2;0]...
INFO (Vectors): Test vec_store_nta_partial[0,2;1]...
INFO (Vectors): Test vec_store_nta_partial[0,2;2]...
INFO (Vectors): Test vec_store_nta_partial[0,2;3]...
INFO (Vectors): Test vec_store_nta_partial[0,2;4]...
INFO (Vectors): Test vec_store_nta_partial[0,2;5]...
INFO (Vectors): Test vec_store_nta_partial[0,3;0]...
INFO (Vectors): Test vec_store_nta_partial[0,3;1]...
INFO (Vectors): Test vec_store_nta_partial[0,3;2]...
INFO (Vectors): Test vec_store_nta_partial[0,3;3]...
INFO (Vectors): Test vec_store_nta_partial[0,3;4]...
INFO (Vectors): Test vec_store_nta_partial[0,3;5]...
INFO (Vectors): Test vec_store_nta_partial[0,4;0]...
INFO (Vectors): Test vec_store_nta_partial[0,4;1]...
INFO (Vectors): Test vec_store_nta_partial[0,4;2]...
INFO (Vectors): Test vec_store_nta_partial[0,4;3]...
INFO (Vectors): Test vec_store_nta_partial[0,4;4]...
INFO (Vectors): Test vec_store_nta_partial[0,4;5]...
INFO (Vectors): Test vec_store_nta_partial[0,5;0]...
INFO (Vectors): Test vec_store_nta_partial[0,5;1]...
INFO (Vectors): Test vec_store_nta_partial[0,5;2]...
INFO (Vectors): Test vec_store_nta_partial[0,5;3]...
INFO (Vectors): Test vec_store_nta_partial[0,5;4]...
INFO (Vectors): Test vec_store_nta_partial[0,5;5]...
INFO (Vectors): Test vec_store_nta_partial[1,0;0]...
INFO (Vectors): Test vec_store_nta_partial[1,0;1]...
INFO (Vectors): Test vec_store_nta_partial[1,0;2]...
INFO (Vectors): Test vec_store_nta_partial[1,0;3]...
INFO (Vectors): Test vec_store_nta_partial[1,0;4]...
INFO (Vectors): Test vec_store_nta_partial[1,0;5]...
INFO (Vectors): Test vec_store_nta_partial[1,1;0]...
INFO (Vectors): Test vec_store_nta_partial[1,1;1]...
INFO (Vectors): Test vec_store_nta_partial[1,1;2]...
INFO (Vectors): Test vec_store_nta_partial[1,1;3]...
INFO (Vectors): Test vec_store_nta_partial[1,1;4]...
INFO (Vectors): Test vec_store_nta_partial[1,1;5]...
INFO (Vectors): Test vec_store_nta_partial[1,2;0]...
INFO (Vectors): Test vec_store_nta_partial[1,2;1]...
INFO (Vectors): Test vec_store_nta_partial[1,2;2]...
INFO (Vectors): Test vec_store_nta_partial[1,2;3]...
INFO (Vectors): Test vec_store_nta_partial[1,2;4]...
INFO (Vectors): Test vec_store_nta_partial[1,2;5]...
INFO (Vectors): Test vec_store_nta_partial[1,3;0]...
INFO (Vectors): Test vec_store_nta_partial[1,3;1]...
INFO (Vectors): Test vec_store_nta_partial[1,3;2]...
INFO (Vectors): Test vec_store_nta_partial[1,3;3]...
INFO (Vectors): Test vec_store_nta_partial[1,3;4]...
INFO (Vectors): Test vec_store_nta_partial[1,3;5]...
INFO (Vectors): Test vec_store_nta_partial[1,4;0]...
INFO (Vectors): Test vec_store_nta_partial[1,4;1]...
INFO (Vectors): Test vec_store_nta_partial[1,4;2]...
INFO (Vectors): Test vec_store_nta_partial[1,4;3]...
INFO (Vectors): Test vec_store_nta_partial[1,4;4]...
INFO (Vectors): Test vec_store_nta_partial[1,4;5]...
INFO (Vectors): Test vec_store_nta_partial[1,5;0]...
INFO (Vectors): Test vec_store_nta_partial[1,5;1]...
INFO (Vectors): Test vec_store_nta_partial[1,5;2]...
INFO (Vectors): Test vec_store_nta_partial[1,5;3]...
INFO (Vectors): Test vec_store_nta_partial[1,5;4]...
INFO (Vectors): Test vec_store_nta_partial[1,5;5]...
INFO (Vectors): Test vec_store_nta_partial[2,0;0]...
INFO (Vectors): Test vec_store_nta_partial[2,0;1]...
INFO (Vectors): Test vec_store_nta_partial[2,0;2]...
INFO (Vectors): Test vec_store_nta_partial[2,0;3]...
INFO (Vectors): Test vec_store_nta_partial[2,0;4]...
INFO (Vectors): Test vec_store_nta_partial[2,0;5]...
INFO (Vectors): Test vec_store_nta_partial[2,1;0]...
INFO (Vectors): Test vec_store_nta_partial[2,1;1]...
INFO (Vectors): Test vec_store_nta_partial[2,1;2]...
INFO (Vectors): Test vec_store_nta_partial[2,1;3]...
INFO (Vectors): Test vec_store_nta_partial[2,1;4]...
INFO (Vectors): Test vec_store_nta_partial[2,1;5]...
INFO (Vectors): Test vec_store_nta_partial[2,2;0]...
INFO (Vectors): Test vec_store_nta_partial[2,2;1]...
INFO (Vectors): Test vec_store_nta_partial[2,2;2]...
INFO (Vectors): Test vec_store_nta_partial[2,2;3]...
INFO (Vectors): Test vec_store_nta_partial[2,2;4]...
INFO (Vectors): Test vec_store_nta_partial[2,2;5]...
INFO (Vectors): Test vec_store_nta_partial[2,3;0]...
INFO (Vectors): Test vec_store_nta_partial[2,3;1]...
INFO (Vectors): Test vec_store_nta_partial[2,3;2]...
INFO (Vectors): Test vec_store_nta_partial[2,3;3]...
INFO (Vectors): Test vec_store_nta_partial[2,3;4]...
INFO (Vectors): Test vec_store_nta_partial[2,3;5]...
INFO (Vectors): Test vec_store_nta_partial[2,4;0]...
INFO (Vectors): Test vec_store_nta_partial[2,4;1]...
INFO (Vectors): Test vec_store_nta_partial[2,4;2]...
INFO (Vectors): Test vec_store_nta_partial[2,4;3]...
INFO (Vectors): Test vec_store_nta_partial[2,4;4]...
INFO (Vectors): Test vec_store_nta_partial[2,4;5]...
INFO (Vectors): Test vec_store_nta_partial[2,5;0]...
INFO (Vectors): Test vec_store_nta_partial[2,5;1]...
INFO (Vectors): Test vec_store_nta_partial[2,5;2]...
INFO (Vectors): Test vec_store_nta_partial[2,5;3]...
INFO (Vectors): Test vec_store_nta_partial[2,5;4]...
INFO (Vectors): Test vec_store_nta_partial[2,5;5]...
INFO (Vectors): Test vec_store_nta_partial[3,0;0]...
INFO (Vectors): Test vec_store_nta_partial[3,0;1]...
INFO (Vectors): Test vec_store_nta_partial[3,0;2]...
INFO (Vectors): Test vec_store_nta_partial[3,0;3]...
INFO (Vectors): Test vec_store_nta_partial[3,0;4]...
INFO (Vectors): Test vec_store_nta_partial[3,0;5]...
INFO (Vectors): Test vec_store_nta_partial[3,1;0]...
INFO (Vectors): Test vec_store_nta_partial[3,1;1]...
INFO (Vectors): Test vec_store_nta_partial[3,1;2]...
INFO (Vectors): Test vec_store_nta_partial[3,1;3]...
INFO (Vectors): Test vec_store_nta_partial[3,1;4]...
INFO (Vectors): Test vec_store_nta_partial[3,1;5]...
INFO (Vectors): Test vec_store_nta_partial[3,2;0]...
INFO (Vectors): Test vec_store_nta_partial[3,2;1]...
INFO (Vectors): Test vec_store_nta_partial[3,2;2]...
INFO (Vectors): Test vec_store_nta_partial[3,2;3]...
INFO (Vectors): Test vec_store_nta_partial[3,2;4]...
INFO (Vectors): Test vec_store_nta_partial[3,2;5]...
INFO (Vectors): Test vec_store_nta_partial[3,3;0]...
INFO (Vectors): Test vec_store_nta_partial[3,3;1]...
INFO (Vectors): Test vec_store_nta_partial[3,3;2]...
INFO (Vectors): Test vec_store_nta_partial[3,3;3]...
INFO (Vectors): Test vec_store_nta_partial[3,3;4]...
INFO (Vectors): Test vec_store_nta_partial[3,3;5]...
INFO (Vectors): Test vec_store_nta_partial[3,4;0]...
INFO (Vectors): Test vec_store_nta_partial[3,4;1]...
INFO (Vectors): Test vec_store_nta_partial[3,4;2]...
INFO (Vectors): Test vec_store_nta_partial[3,4;3]...
INFO (Vectors): Test vec_store_nta_partial[3,4;4]...
INFO (Vectors): Test vec_store_nta_partial[3,4;5]...
INFO (Vectors): Test vec_store_nta_partial[3,5;0]...
INFO (Vectors): Test vec_store_nta_partial[3,5;1]...
INFO (Vectors): Test vec_store_nta_partial[3,5;2]...
INFO (Vectors): Test vec_store_nta_partial[3,5;3]...
INFO (Vectors): Test vec_store_nta_partial[3,5;4]...
INFO (Vectors): Test vec_store_nta_partial[3,5;5]...
INFO (Vectors): Test vec_store_nta_partial[4,0;0]...
INFO (Vectors): Test vec_store_nta_partial[4,0;1]...
INFO (Vectors): Test vec_store_nta_partial[4,0;2]...
INFO (Vectors): Test vec_store_nta_partial[4,0;3]...
INFO (Vectors): Test vec_store_nta_partial[4,0;4]...
INFO (Vectors): Test vec_store_nta_partial[4,0;5]...
INFO (Vectors): Test vec_store_nta_partial[4,1;0]...
INFO (Vectors): Test vec_store_nta_partial[4,1;1]...
INFO (Vectors): Test vec_store_nta_partial[4,1;2]...
INFO (Vectors): Test vec_store_nta_partial[4,1;3]...
INFO (Vectors): Test vec_store_nta_partial[4,1;4]...
INFO (Vectors): Test vec_store_nta_partial[4,1;5]...
INFO (Vectors): Test vec_store_nta_partial[4,2;0]...
INFO (Vectors): Test vec_store_nta_partial[4,2;1]...
INFO (Vectors): Test vec_store_nta_partial[4,2;2]...
INFO (Vectors): Test vec_store_nta_partial[4,2;3]...
INFO (Vectors): Test vec_store_nta_partial[4,2;4]...
INFO (Vectors): Test vec_store_nta_partial[4,2;5]...
INFO (Vectors): Test vec_store_nta_partial[4,3;0]...
INFO (Vectors): Test vec_store_nta_partial[4,3;1]...
INFO (Vectors): Test vec_store_nta_partial[4,3;2]...
INFO (Vectors): Test vec_store_nta_partial[4,3;3]...
INFO (Vectors): Test vec_store_nta_partial[4,3;4]...
INFO (Vectors): Test vec_store_nta_partial[4,3;5]...
INFO (Vectors): Test vec_store_nta_partial[4,4;0]...
INFO (Vectors): Test vec_store_nta_partial[4,4;1]...
INFO (Vectors): Test vec_store_nta_partial[4,4;2]...
INFO (Vectors): Test vec_store_nta_partial[4,4;3]...
INFO (Vectors): Test vec_store_nta_partial[4,4;4]...
INFO (Vectors): Test vec_store_nta_partial[4,4;5]...
INFO (Vectors): Test vec_store_nta_partial[4,5;0]...
INFO (Vectors): Test vec_store_nta_partial[4,5;1]...
INFO (Vectors): Test vec_store_nta_partial[4,5;2]...
INFO (Vectors): Test vec_store_nta_partial[4,5;3]...
INFO (Vectors): Test vec_store_nta_partial[4,5;4]...
INFO (Vectors): Test vec_store_nta_partial[4,5;5]...
INFO (Vectors): Test vec_store_nta_partial[5,0;0]...
INFO (Vectors): Test vec_store_nta_partial[5,0;1]...
INFO (Vectors): Test vec_store_nta_partial[5,0;2]...
INFO (Vectors): Test vec_store_nta_partial[5,0;3]...
INFO (Vectors): Test vec_store_nta_partial[5,0;4]...
INFO (Vectors): Test vec_store_nta_partial[5,0;5]...
INFO (Vectors): Test vec_store_nta_partial[5,1;0]...
INFO (Vectors): Test vec_store_nta_partial[5,1;1]...
INFO (Vectors): Test vec_store_nta_partial[5,1;2]...
INFO (Vectors): Test vec_store_nta_partial[5,1;3]...
INFO (Vectors): Test vec_store_nta_partial[5,1;4]...
INFO (Vectors): Test vec_store_nta_partial[5,1;5]...
INFO (Vectors): Test vec_store_nta_partial[5,2;0]...
INFO (Vectors): Test vec_store_nta_partial[5,2;1]...
INFO (Vectors): Test vec_store_nta_partial[5,2;2]...
INFO (Vectors): Test vec_store_nta_partial[5,2;3]...
INFO (Vectors): Test vec_store_nta_partial[5,2;4]...
INFO (Vectors): Test vec_store_nta_partial[5,2;5]...
INFO (Vectors): Test vec_store_nta_partial[5,3;0]...
INFO (Vectors): Test vec_store_nta_partial[5,3;1]...
INFO (Vectors): Test vec_store_nta_partial[5,3;2]...
INFO (Vectors): Test vec_store_nta_partial[5,3;3]...
INFO (Vectors): Test vec_store_nta_partial[5,3;4]...
INFO (Vectors): Test vec_store_nta_partial[5,3;5]...
INFO (Vectors): Test vec_store_nta_partial[5,4;0]...
INFO (Vectors): Test vec_store_nta_partial[5,4;1]...
INFO (Vectors): Test vec_store_nta_partial[5,4;2]...
INFO (Vectors): Test vec_store_nta_partial[5,4;3]...
INFO (Vectors): Test vec_store_nta_partial[5,4;4]...
INFO (Vectors): Test vec_store_nta_partial[5,4;5]...
INFO (Vectors): Test vec_store_nta_partial[5,5;0]...
INFO (Vectors): Test vec_store_nta_partial[5,5;1]...
INFO (Vectors): Test vec_store_nta_partial[5,5;2]...
INFO (Vectors): Test vec_store_nta_partial[5,5;3]...
INFO (Vectors): Test vec_store_nta_partial[5,5;4]...
INFO (Vectors): Test vec_store_nta_partial[5,5;5]...
INFO (Vectors): Test kneg...
INFO (Vectors): Test kadd...
INFO (Vectors): Test ksub...
INFO (Vectors): Test kmul...
INFO (Vectors): Test kdiv...
INFO (Vectors): Test kmadd...
INFO (Vectors): Test kmsub...
INFO (Vectors): Test knmadd...
INFO (Vectors): Test knmsub...
INFO (Vectors): Test kacos...
INFO (Vectors): Test kacosh...
INFO (Vectors): Test kasin...
INFO (Vectors): Test kasinh...
INFO (Vectors): Test katan...
INFO (Vectors): Test katan2...
INFO (Vectors): Test katanh...
INFO (Vectors): Test kcos...
INFO (Vectors): Test kcosh...
INFO (Vectors): Test kexp...
INFO (Vectors): Test kfabs...
INFO (Vectors): Test kfmax...
INFO (Vectors): Test kfmin...
INFO (Vectors): Test kfnabs...
INFO (Vectors): Test klog...
INFO (Vectors): Test kpow...
INFO (Vectors): Test ksin...
INFO (Vectors): Test ksinh...
INFO (Vectors): Test ksqrt...
INFO (Vectors): Test ktan...
INFO (Vectors): Test ktanh...
INFO (Vectors): Test kifpos positive...
INFO (Vectors): Test kifpos negative...
INFO (Vectors): Test kifpos 0...
INFO (Vectors): Test kifpos -0...
INFO (Vectors): Test kifneg positive...
INFO (Vectors): Test kifneg negative...
INFO (Vectors): Test kifneg 0...
INFO (Vectors): Test kifneg -0...
INFO (Vectors): 329/329 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.

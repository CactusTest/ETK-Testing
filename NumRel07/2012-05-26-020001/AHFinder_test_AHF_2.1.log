/home/jhar131/TESTING/einsteintoolkit/2012-05-26-020001/Cactus/TEST/sim/AHFinder
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 

--------------------------------------------------------------------------------

Cactus version:    4.0.1
Compile date:      May 26 2012 (02:47:45)
Run date:          May 26 2012 (02:51:04-0500)
Run host:          numrel07.cct.lsu.edu (pid=26104)
Working directory: /home/jhar131/TESTING/einsteintoolkit/2012-05-26-020001/Cactus/TEST/sim/AHFinder
Executable:        /home/jhar131/TESTING/einsteintoolkit/2012-05-26-020001/Cactus/exe/cactus_sim
Parameter file:    /home/jhar131/TESTING/einsteintoolkit/2012-05-26-020001/Cactus/arrangements/EinsteinAnalysis/AHFinder/test/test_AHF_2.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Time CartGrid3D CoordBase SymBase AdmBase StaticConformal SpaceMask CoordGauge ADMMacros Boundary ADM IDAnalyticBH IOUtil PUGH PUGHSlab PUGHReduce LocalInterp PUGHInterp AHFinder LocalReduce<---
Activating thorn ADM...Success -> active implementation adm
Activating thorn AdmBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn AHFinder...Success -> active implementation AHFinder
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn IDAnalyticBH...Success -> active implementation idanalyticbh
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LocalInterp...Success -> active implementation LocalInterp
Activating thorn LocalReduce...Success -> active implementation LocalReduce
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHInterp...Success -> active implementation Interp
Activating thorn PUGHReduce...Success -> active implementation Reduce
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      ADM::ADMRegisterSlicing: [global] Register slicings
      AHFinder::AHFinder_Startup: [global] Register AHFinder as an IO Method
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      PUGH::Driver_Startup: Startup routine
      LocalInterp::LocalInterp_Startup: register LocalInterp's interpolation operators
      LocalReduce::LocalReduce_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      PUGHInterp::PUGHInterp_Startup: PUGHInterp startup routine
      PUGHReduce::PUGHReduce_Startup: Startup routine
      SymBase::SymBase_Startup: Register GH Extension for SymBase

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADM::ADMSetSym: [global] Set grid function symmetries
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      AHFinder::AHFinder_SetSym: [global] Set symmetries for AHFinder grid functions
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADM::ADM_ParamCheck: [global] Check parameters
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      AHFinder::AHFinder_ParamCheck: [global] Check for physical or conformal metric
      Boundary::Boundary_Check: Check dimension of grid variables
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      IDAnalyticBH::IDAnalyticBH_ParamChecker: [global] Construct parameters for analytic black hole solutions

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        PUGH::PUGH_Report: Report on PUGH set up
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::Time_Simple: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          IDAnalyticBH::Schwarzschild: Construct initial data for a single Schwarzschild black hole
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
        AHFinder::AHFinder_InitOutput: Create output files, write headers
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
      [CCTK_POSTINITIAL]
        ADM::ADM_ConformalCheck: Set conformal_state to 0 for physical, or check that it is at least 3
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        PUGH::PUGH_Report: Report on PUGH set up
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::Time_Simple: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        AHFinder::ahfinder: Call apparent horizon finder
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
    [CCTK_EVOL]
      ADM::ADM_Setup: Setup coefficients and internal slicing flags
      ADM::ADM_StaggeredLeapfrog1: Evolve using Staggered Leapfrog (step 1)
      ADM::ADM_StaggeredLeapfrog2: Evolve using Staggered Leapfrog (step 2)
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
  if (checkpoint)
    [CCTK_CHECKPOINT]
  endif
  if (analysis)
    [CCTK_ANALYSIS]
      AHFinder::ahfinder: Call apparent horizon finder
  endif
  Output grid variables
  enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (SymBase): Symmetry on lower x-face: CartGrid3D
INFO (SymBase): Symmetry on lower y-face: CartGrid3D
INFO (SymBase): Symmetry on lower z-face: CartGrid3D
INFO (ADM): Evolve using the ADM system
INFO (ADM):   with staggered leapfrog
INFO (IDAnalyticBH): Schwarzschild black hole
INFO (IDAnalyticBH):   throat at 1.000000
INFO (IDAnalyticBH): Black hole initial data uses conformal metric
INFO (IDAnalyticBH):   and conformal derivatives
INFO (ADMMacros): Spatial finite differencing order: 2
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>2.0000000e-01  dy=>2.0000000e-01  dz=>2.0000000e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.100, 4.700]  y=>[-0.100, 4.700]  z=>[-0.100, 4.700]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[1,24]  y=>[1,24]  z=>[1,24]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 25 25 25
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 15625   [25 x 25 x 25]
INFO (PUGH):   Maximum load skew: 0.000000
INFO (Time): Timestep set to 0.1 (courant_static)
INFO (IDAnalyticBH): setting up Schwarzschild initial


 AHFinder: SINGLE HORIZON MODE!

 Searching for horizon

 Initial guess sphere with radius:   4.230E+00
 centered on:  0.000E+00  0.000E+00  0.000E+00

 Surface found, details below.

 Surface area       =  2.033305E+02
 Surface mass       =  2.011251E+00
 Mean value of H    = -3.857594E-04
 Mean value of H^2  =  2.938667E-04
 Standard deviation =  1.713820E-02

 circ_eq  =  2.525773E+01
 meri_p1  =  1.262886E+01
 meri_p2  =  1.262886E+01

 The surface is probably an outer horizon, but
 the mean of the square of the expansion is
 not small enough. Try a larger lmax, or a
 smaller grid size.

 Shape coefficients:

 c0( 0) =  1.054154E+00


--------------------------------------------------------------------------------
Done.

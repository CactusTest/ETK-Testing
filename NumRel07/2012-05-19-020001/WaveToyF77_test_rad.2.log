/home/jhar131/TESTING/einsteintoolkit/2012-05-19-020001/Cactus/TEST/sim/WaveToyF77
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 

--------------------------------------------------------------------------------

Cactus version:    4.0.1
Compile date:      May 19 2012 (02:48:08)
Run date:          May 19 2012 (03:17:45-0500)
Run host:          numrel07.cct.lsu.edu (pid=24872)
Working directory: /home/jhar131/TESTING/einsteintoolkit/2012-05-19-020001/Cactus/TEST/sim/WaveToyF77
Executable:        /home/jhar131/TESTING/einsteintoolkit/2012-05-19-020001/Cactus/exe/cactus_sim
Parameter file:    /home/jhar131/TESTING/einsteintoolkit/2012-05-19-020001/Cactus/arrangements/CactusWave/WaveToyF77/test/test_rad.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->boundary iobasic idscalarwave time wavetoyf77 pugh pughslab pughreduce CartGrid3D CoordBase SymBase ioutil ioascii localreduce<---
Activating thorn boundary...Success -> active implementation boundary
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn idscalarwave...Success -> active implementation idscalarwave
Activating thorn ioascii...Success -> active implementation IOASCII
Activating thorn iobasic...Success -> active implementation IOBasic
Activating thorn ioutil...Success -> active implementation IO
Activating thorn localreduce...Success -> active implementation LocalReduce
Activating thorn pugh...Success -> active implementation Driver
Activating thorn pughreduce...Success -> active implementation Reduce
Activating thorn pughslab...Success -> active implementation Hyperslab
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn time...Success -> active implementation time
Activating thorn wavetoyf77...Success -> active implementation wavetoy
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      PUGH::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      IOASCII::IOASCII_Startup: Startup routine
      LocalReduce::LocalReduce_Startup: Startup routine
      IOBasic::IOBasic_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      PUGHReduce::PUGHReduce_Startup: Startup routine
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      WaveToyF77::WaveToyF77_Startup: Register banner

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
  Parameter checking routines
    [CCTK_PARAMCHECK]
      Boundary::Boundary_Check: Check dimension of grid variables
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      IDScalarWave::IDScalarWave_CheckParameters: Check parameters

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::Time_Simple: [singlemap] Set timestep based on Courant condition (courant_static)
        WaveToyF77::WaveToyF77_InitSymBound: Schedule symmetries
      [CCTK_INITIAL]
        GROUP WaveToy_InitialData: Execute initial data for wavetoy
          IDScalarWave::IDScalarWave_InitialData: Initial data for 3D wave equation
        IOBasic::IOBasic_Init: Initialisation routine
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::Time_Simple: [singlemap] Set timestep based on Courant condition (courant_static)
        WaveToyF77::WaveToyF77_InitSymBound: Schedule symmetries
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
      WaveToyF77::WaveToy_Evolution: Evolution of 3D wave equation
      WaveToyF77::WaveToy_Boundaries: [level] Boundaries of 3D wave equation
      GROUP WaveToyF7_ApplyBCs: Apply boundary conditions
        GROUP BoundaryConditions: Execute all boundary conditions
          Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
          CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
        Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      WaveToyF77::WaveToy_Boundaries: [level] Boundaries of 3D wave equation
      GROUP WaveToyF7_ApplyBCs: Apply boundary conditions
        GROUP BoundaryConditions: Execute all boundary conditions
          Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
          CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
        Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
  if (checkpoint)
    [CCTK_CHECKPOINT]
  endif
  if (analysis)
    [CCTK_ANALYSIS]
  endif
  Output grid variables
  enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------
WaveToyF77: Evolutions of a Scalar Field
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'WAVETOY::phi'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (IOBasic): I/O Method 'Scalar' registered: output of scalar quantities (grid scalars, reductions) to ASCII files
INFO (IOBasic): I/O Method 'Info' registered: output of scalar quantities (grid scalars, reductions) to screen
INFO (SymBase): Symmetry on lower x-face: CartGrid3D
INFO (SymBase): Symmetry on lower y-face: CartGrid3D
INFO (SymBase): Symmetry on lower z-face: CartGrid3D
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>6.0000000e-01  dy=>6.0000000e-01  dz=>6.0000000e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.300, 8.100]  y=>[-0.300, 8.100]  z=>[-0.300, 8.100]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[1,14]  y=>[1,14]  z=>[1,14]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 15 15 15
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 2025   [9 x 15 x 15]
INFO (PUGH):   Maximum load skew: 11.000000
INFO (Time): Timestep set to 0.3 (courant_static)
INFO (IOBasic): Periodic scalar output requested for 'WAVETOY::phi'
--------------------------------------------------------------------------------
Done.

/home/jhar131/TESTING/einsteintoolkit/2012-07-10-020001/Cactus/TEST/sim/EOS_Omni
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 

--------------------------------------------------------------------------------

Cactus version:    4.0.1
Compile date:      Jul 10 2012 (02:49:27)
Run date:          Jul 10 2012 (03:23:22-0500)
Run host:          numrel07.cct.lsu.edu (pid=1129)
Working directory: /home/jhar131/TESTING/einsteintoolkit/2012-07-10-020001/Cactus/TEST/sim/EOS_Omni
Executable:        /home/jhar131/TESTING/einsteintoolkit/2012-07-10-020001/Cactus/exe/cactus_sim
Parameter file:    /home/jhar131/TESTING/einsteintoolkit/2012-07-10-020001/Cactus/arrangements/EinsteinEOS/EOS_Omni/test/eos_omni.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->eos_omni IOUtil PUGH<---
Activating thorn eos_omni...Success -> active implementation EOS_Omni
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn PUGH...Success -> active implementation Driver
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      PUGH::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      EOS_Omni::EOS_Omni_Startup: [global] Set up conversion factors and other fun stuff
  Parameter checking routines
    [CCTK_PARAMCHECK]

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
      [CCTK_BASEGRID]
        EOS_Omni::EOS_OMNI_ReadTable: [global] Read EOS HDF5 table
        EOS_Omni::EOS_OMNI_dumptable: [global] Dump EOS HDF5 table in ASCII
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        EOS_Omni::EOS_OMNI_ReadTable: [global] Read EOS HDF5 table
        EOS_Omni::EOS_OMNI_dumptable: [global] Dump EOS HDF5 table in ASCII
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
  if (checkpoint)
    [CCTK_CHECKPOINT]
  endif
  if (analysis)
    [CCTK_ANALYSIS]
  endif
  Output grid variables
  enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
--------------------------------------------------------------------------------
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

WARNING[L1,P0] (src): No environment variable EOS_TABLE_PATH found

WARNING[L1,P1] (src): No environment variable EOS_TABLE_PATH found

INFO (EOS_Omni): *******************************
INFO (EOS_Omni): Reading nuc_eos table file:
INFO (EOS_Omni): ../../../arrangements/EinsteinEOS/EOS_Omni/test/TEST_TABLEEOS_rho4_temp4_ye4_version1.0_20120514.h5
INFO (EOS_Omni): *******************************
INFO (EOS_Omni): *******************************
INFO (EOS_Omni): Dumping nuc_eos table file in ASCII:
INFO (EOS_Omni): eos_omni/TEST_TABLEEOS_rho4_temp4_ye4_version1.0_20120514.asc
INFO (EOS_Omni): *******************************
INFO (PUGH): MPI Evolution on 2 processors
--------------------------------------------------------------------------------
Done.

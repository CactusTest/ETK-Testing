/home/jhar131/TESTING/einsteintoolkit/2012-05-30-020001/Cactus/TEST/sim/IDAnalyticBH
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 

--------------------------------------------------------------------------------

Cactus version:    4.0.1
Compile date:      May 30 2012 (02:48:01)
Run date:          May 30 2012 (03:10:18-0500)
Run host:          numrel07.cct.lsu.edu (pid=26496)
Working directory: /home/jhar131/TESTING/einsteintoolkit/2012-05-30-020001/Cactus/TEST/sim/IDAnalyticBH
Executable:        /home/jhar131/TESTING/einsteintoolkit/2012-05-30-020001/Cactus/exe/cactus_sim
Parameter file:    /home/jhar131/TESTING/einsteintoolkit/2012-05-30-020001/Cactus/arrangements/EinsteinInitialData/IDAnalyticBH/test/kerr.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Boundary Time CartGrid3D CoordBase SymBase pugh pughslab pughreduce IOUtil iobasic ioascii ADMBase ADM ADMMacros ADMAnalysis SpaceMask CoordGauge IDAnalyticBH StaticConformal localreduce<---
Activating thorn ADM...Success -> active implementation adm
Activating thorn ADMAnalysis...Success -> active implementation ADMAnalysis
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn IDAnalyticBH...Success -> active implementation idanalyticbh
Activating thorn ioascii...Success -> active implementation IOASCII
Activating thorn iobasic...Success -> active implementation IOBasic
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn localreduce...Success -> active implementation LocalReduce
Activating thorn pugh...Success -> active implementation Driver
Activating thorn pughreduce...Success -> active implementation Reduce
Activating thorn pughslab...Success -> active implementation Hyperslab
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      ADM::ADMRegisterSlicing: [global] Register slicings
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      PUGH::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      IOASCII::IOASCII_Startup: Startup routine
      LocalReduce::LocalReduce_Startup: Startup routine
      IOBasic::IOBasic_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      PUGHReduce::PUGHReduce_Startup: Startup routine
      SymBase::SymBase_Startup: Register GH Extension for SymBase

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADM::ADMSetSym: [global] Set grid function symmetries
      ADMAnalysis::ADMAnalysis_RegisterSymmetry: [global] Register symmetry of Ricci tensor and scalar
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADM::ADM_ParamCheck: [global] Check parameters
      ADMAnalysis::ADMAnalysis_ParamCheck: [global] Check that the metric_type is recognised
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      IDAnalyticBH::IDAnalyticBH_ParamChecker: [global] Construct parameters for analytic black hole solutions

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::Time_Simple: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          IDAnalyticBH::KerrID: Construct initial data for a single Kerr black hole
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
        IOBasic::IOBasic_Init: Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
      [CCTK_POSTINITIAL]
        ADM::ADM_ConformalCheck: Set conformal_state to 0 for physical, or check that it is at least 3
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::Time_Simple: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        ADMAnalysis::ADMAnalysis_EvaltrK: Compute the trace of the extrinsic curvature and the determinant of the metric
        ADMAnalysis::ADMAnalysis_MetricCartToSphere: Calculate the spherical metric in r,theta(q), phi(p)
        ADMAnalysis::ADMAnalysis_CurvCartToSphere: Calculate the spherical ex. curvature in r, theta(q), phi(p)
        GROUP RicciGroup: Calculate Ricci tensor, with boundary conditions
          ADMAnalysis::ADMAnalysis_Ricci: Calculate Ricci tensor, with boundary conditions
          GROUP RicciBoundariesGroup: Set Ricci tensor on the boundary
            ADMAnalysis::ADMAnalysis_Ricci_Boundaries: [level] Select boundary conditions for the Ricci tensor
            GROUP ADMAnalysis_ApplyBCs: Apply boundary conditions to the Ricci tensor
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
    [CCTK_EVOL]
      ADM::ADM_Setup: Flagging if slicing is done externaly
      ADM::ADM_DoubleLeap: Evolve using Double Leapfrog
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
  if (checkpoint)
    [CCTK_CHECKPOINT]
  endif
  if (analysis)
    [CCTK_ANALYSIS]
      ADMAnalysis::ADMAnalysis_EvaltrK: Compute the trace of the extrinsic curvature and the determinant of the metric
      ADMAnalysis::ADMAnalysis_MetricCartToSphere: Calculate the spherical metric in r,theta(q), phi(p)
      ADMAnalysis::ADMAnalysis_CurvCartToSphere: Calculate the spherical ex. curvature in r, theta(q), phi(p)
      GROUP RicciGroup: Calculate Ricci tensor, with boundary conditions
        ADMAnalysis::ADMAnalysis_Ricci: Calculate Ricci tensor, with boundary conditions
        GROUP RicciBoundariesGroup: Set Ricci tensor on the boundary
          ADMAnalysis::ADMAnalysis_Ricci_Boundaries: [level] Select boundary conditions for the Ricci tensor
          GROUP ADMAnalysis_ApplyBCs: Apply boundary conditions to the Ricci tensor
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
  endif
  Output grid variables
  enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 5 iterations
INFO (IOASCII): Periodic 1D output requested for 'ADMANALYSIS::trK', 'ADMANALYSIS::detg', 'ADMANALYSIS::grr', 'ADMANALYSIS::gqq', 'ADMANALYSIS::gpp', 'ADMANALYSIS::grq', 'ADMANALYSIS::grp', 'ADMANALYSIS::gqp', 'ADMANALYSIS::krr', 'ADMANALYSIS::kqq', 'ADMANALYSIS::kpp', 'ADMANALYSIS::krq', 'ADMANALYSIS::krp', 'ADMANALYSIS::kqp', 'ADMBASE::gxx', 'ADMBASE::gxy', 'ADMBASE::gxz', 'ADMBASE::gyy', 'ADMBASE::gyz', 'ADMBASE::gzz', 'ADMBASE::kxx', 'ADMBASE::kxy', 'ADMBASE::kxz', 'ADMBASE::kyy', 'ADMBASE::kyz', 'ADMBASE::kzz', 'ADMBASE::alp', 'STATICCONFORMAL::psi', 'STATICCONFORMAL::psix', 'STATICCONFORMAL::psiy', 'STATICCONFORMAL::psiz', 'STATICCONFORMAL::psixx', 'STATICCONFORMAL::psixy', 'STATICCONFORMAL::psixz', 'STATICCONFORMAL::psiyy', 'STATICCONFORMAL::psiyz', 'STATICCONFORMAL::psizz'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (IOBasic): I/O Method 'Scalar' registered: output of scalar quantities (grid scalars, reductions) to ASCII files
INFO (IOBasic): I/O Method 'Info' registered: output of scalar quantities (grid scalars, reductions) to screen
INFO (ADM): Evolve using the ADM system
INFO (ADM):   with double leapfrog
INFO (IDAnalyticBH): Kerr black hole
INFO (IDAnalyticBH):   m = 2.000000, a = 0.100000
INFO (IDAnalyticBH):   throat at 0.998749
INFO (IDAnalyticBH): Black hole initial data uses conformal metric
INFO (IDAnalyticBH):   and conformal derivatives
INFO (ADMMacros): Spatial finite differencing order: 2
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>8.0000000e-01  dy=>8.0000000e-01  dz=>8.0000000e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-7.600, 7.600]  y=>[-7.600, 7.600]  z=>[-7.600, 7.600]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,19]  y=>[0,19]  z=>[0,19]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 20 20 20
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 8000   [20 x 20 x 20]
INFO (PUGH):   Maximum load skew: 0.000000
INFO (Time): Timestep set to 0.2 (courant_static)
INFO (IDAnalyticBH): setting up Kerr initial data
INFO (IOBasic): Periodic scalar output requested for 'ADMANALYSIS::trK', 'ADMANALYSIS::grr'
INFO (IOBasic): Periodic info output requested for 'ADMBASE::gxx', 'ADMBASE::kxx'
-------------------------------------------------------------------------------
   it  |          | ADMBASE::gxx                | ADMBASE::kxx                |
       |    t     | minimum      | maximum      | minimum      | maximum      |
-------------------------------------------------------------------------------
     0 |    0.000 |   1.00000011 |   1.00097416 |  -0.20153074 |   0.20153074 |
INFO (ADM): 1+log slicing
INFO (ADM):   curved space diffusion = 0 for efficiency
INFO (ADM): Initializing Leapfrog with FTCS Step
     1 |    0.200 |   0.99766248 |   1.00331759 |  -0.20221217 |   0.20084931 |
     2 |    0.400 |   0.99369821 |   1.01083573 |  -0.20812773 |   0.19964255 |
     3 |    0.600 |   0.98831402 |   1.01965229 |  -0.29025628 |   0.21330180 |
     4 |    0.800 |   0.97942401 |   1.03539903 |  -0.37459132 |   0.22250621 |
     5 |    1.000 |   0.97054437 |   1.05134183 |  -0.46024469 |   0.26077855 |
     6 |    1.200 |   0.95799890 |   1.07430699 |  -0.55037584 |   0.29510214 |
     7 |    1.400 |   0.94562968 |   1.09780861 |  -0.64212097 |   0.36152695 |
     8 |    1.600 |   0.92938241 |   1.12841087 |  -0.74093711 |   0.41867932 |
     9 |    1.800 |   0.91363419 |   1.16003789 |  -0.84133772 |   0.52903780 |
    10 |    2.000 |   0.89376984 |   1.19876718 |  -0.95174986 |   0.61860208 |
--------------------------------------------------------------------------------
Done.

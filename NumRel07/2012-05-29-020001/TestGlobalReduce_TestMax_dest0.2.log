/home/jhar131/TESTING/einsteintoolkit/2012-05-29-020001/Cactus/TEST/sim/TestGlobalReduce
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 

--------------------------------------------------------------------------------

Cactus version:    4.0.1
Compile date:      May 29 2012 (02:49:03)
Run date:          May 29 2012 (03:19:54-0500)
Run host:          numrel07.cct.lsu.edu (pid=18040)
Working directory: /home/jhar131/TESTING/einsteintoolkit/2012-05-29-020001/Cactus/TEST/sim/TestGlobalReduce
Executable:        /home/jhar131/TESTING/einsteintoolkit/2012-05-29-020001/Cactus/exe/cactus_sim
Parameter file:    /home/jhar131/TESTING/einsteintoolkit/2012-05-29-020001/Cactus/arrangements/CactusTest/TestGlobalReduce/test/TestMax_dest0.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->PUGH PUGHReduce PUGHSlab CoordBase TestGlobalReduce LocalReduce IOUtil IOBasic IOASCII CartGrid3D<---
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOBasic...Success -> active implementation IOBasic
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LocalReduce...Success -> active implementation LocalReduce
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHReduce...Success -> active implementation Reduce
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn TestGlobalReduce...Success -> active implementation testglobalreduce
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      PUGH::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      IOASCII::IOASCII_Startup: Startup routine
      LocalReduce::LocalReduce_Startup: Startup routine
      IOBasic::IOBasic_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      PUGHReduce::PUGHReduce_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
        IOBasic::IOBasic_Init: Initialisation routine
        TestGlobalReduce::TestGlobalReduce_Initial: Initialize the input arrays to values
      [CCTK_POSTINITIAL]
        TestGlobalReduce::TestGlobalReduceC_Avg: Test out GF reduction
        TestGlobalReduce::TestGlobalReduceC_Maximum: Test out maximum reduction
        TestGlobalReduce::TestGlobalReduceC_Minimum: Test out minimum reduction
        TestGlobalReduce::TestGlobalReduceC_Sum: Test out sum reduction
        TestGlobalReduce::TestGlobalReduceC_GF: Test out GF reduction
        TestGlobalReduce::TestGlobalReduceC_Norms: Test out GF reduction
        TestGlobalReduce::TestGlobalReduceC_Scalar: Test out GF reduction
        TestGlobalReduce::TestGlobalReduceC_Weighted_Avg: Test weighted global average reduction
        TestGlobalReduce::TestGlobalReduceC_Weighted_Maximum: Test weighted global maximum reduction
        TestGlobalReduce::TestGlobalReduceC_Weighted_Minimum: Test weighted global minimum reduction
        TestGlobalReduce::TestGlobalReduceC_Weighted_Sum: Test weighted global Sum reduction
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::CartGrid3D_SetRanges: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
  if (checkpoint)
    [CCTK_CHECKPOINT]
  endif
  if (analysis)
    [CCTK_ANALYSIS]
  endif
  Output grid variables
  enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output every 1 iterations
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output every 1 iterations
INFO (IOBasic): I/O Method 'Scalar' registered: output of scalar quantities (grid scalars, reductions) to ASCII files
INFO (IOBasic): I/O Method 'Info' registered: output of scalar quantities (grid scalars, reductions) to screen
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
INFO (TestGlobalReduce): Testing for Average 
INFO (TestGlobalReduce): Testing for maximum value
INFO (TestGlobalReduce): Testing for minimum value
INFO (TestGlobalReduce): Testing for sum
INFO (TestGlobalReduce): Testing for maximum value of GF
INFO (TestGlobalReduce): Testing for sum value of GF
INFO (TestGlobalReduce): Testing norm1, norm2, norm3, norm4 and norminf value of GF
INFO (TestGlobalReduce): Testing for maximum scalar reduction
INFO (TestGlobalReduce): Testing for sum scalar reduction
INFO (TestGlobalReduce): Testing for Average 
INFO (TestGlobalReduce): Testing for maximum value
INFO (TestGlobalReduce): Testing for minimum value
INFO (TestGlobalReduce): Testing for sum
INFO (IOBasic): Periodic scalar output requested for 'TESTGLOBALREDUCE::int_max_3D', 'TESTGLOBALREDUCE::real_max_3D'
-------------------
   it  |          |
       |    t     |
-------------------
     0 |    0.000 |
--------------------------------------------------------------------------------
Done.
